{"version":3,"file":"798.483d25.chunk.js","mappings":"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","sources":["webpack://typescript-project/./node_modules/moment/locale/ sync en%7Cru","webpack://typescript-project/./www/layout/box/box-helper.ts","webpack://typescript-project/./www/layout/box/box.tsx","webpack://typescript-project/./www/layout/markdown-input-wrapper/markdown-input-wrapper.tsx","webpack://typescript-project/./www/layout/markdown-input-wrapper/markdown-input-wrapper.scss","webpack://typescript-project/./www/page/cms/cms-article/cms-article-layout.tsx","webpack://typescript-project/./www/page/cms/cms-article/cms-article.tsx","webpack://typescript-project/./www/page/cms/layout/cms-page/cms-page.tsx"],"sourcesContent":["var map = {\n\t\"./en-au\": 8348,\n\t\"./en-au.js\": 8348,\n\t\"./en-ca\": 7925,\n\t\"./en-ca.js\": 7925,\n\t\"./en-gb\": 2243,\n\t\"./en-gb.js\": 2243,\n\t\"./en-ie\": 6436,\n\t\"./en-ie.js\": 6436,\n\t\"./en-il\": 7207,\n\t\"./en-il.js\": 7207,\n\t\"./en-in\": 4175,\n\t\"./en-in.js\": 4175,\n\t\"./en-nz\": 6319,\n\t\"./en-nz.js\": 6319,\n\t\"./en-sg\": 1662,\n\t\"./en-sg.js\": 1662,\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1176;","// eslint-disable-next-line complexity\nexport function makeCssArray(value?: Array<number> | number): [number, number, number, number] {\n    if (typeof value === 'number') {\n        return [value, value, value, value];\n    }\n\n    if (!Array.isArray(value)) {\n        return [0, 0, 0, 0];\n    }\n\n    const arrayLength = value.length;\n\n    switch (arrayLength) {\n        case 0: {\n            return [0, 0, 0, 0];\n        }\n        case 1: {\n            return [value[0], value[0], value[0], value[0]];\n        }\n        case 2: {\n            return [value[0], value[1], value[0], value[1]];\n        }\n        case 3: {\n            return [value[0], value[1], value[2], value[1]];\n        }\n        case 4: {\n            return [value[0], value[1], value[2], value[3]];\n        }\n        default: {\n            console.error('makeCssArray: too big array');\n            return [value[0], value[1], value[2], value[3]];\n        }\n    }\n}\n","import {ReactNode, ElementType, CSSProperties} from 'react';\n\nimport {makeCssArray} from './box-helper';\n\ntype BoxPropsType = {\n    backgroundColor?: string;\n    boxSizing?: 'border-box' | 'content-box' | 'initial';\n    children?: ReactNode;\n    display?: 'block' | 'flex' | 'inline';\n    height?: number | string;\n    margin?: Array<number> | number;\n    padding?: Array<number> | number;\n    tagName?: ElementType;\n    width?: number | string;\n};\n\nexport function Box(props: BoxPropsType): JSX.Element {\n    const {\n        tagName: TagName = 'div',\n        children,\n        margin,\n        padding,\n        width,\n        height,\n        boxSizing,\n        backgroundColor,\n        display,\n    } = props;\n\n    const [marginTop, marginRight, marginBottom, marginLeft, paddingTop, paddingRight, paddingBottom, paddingLeft] = [\n        ...makeCssArray(margin),\n        ...makeCssArray(padding),\n    ].map((value: number): string => `${value}px`);\n\n    const style: CSSProperties = {\n        backgroundColor,\n        boxSizing,\n        display,\n        height,\n        marginBottom,\n        marginLeft,\n        marginRight,\n        marginTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n        paddingTop,\n        width,\n    };\n\n    return <TagName style={style}>{children}</TagName>;\n}\n","import {Row, Col} from 'antd';\n\nimport {Box} from '../box/box';\nimport {Markdown} from '../markdown/markdown';\n\nimport markdownInputWrapperStyle from './markdown-input-wrapper.scss';\n\ntype MarkdownInputWrapperPropsType = {\n    children: JSX.Element;\n    mdInput: string;\n};\n\nexport function MarkdownInputWrapper(props: MarkdownInputWrapperPropsType): JSX.Element {\n    const {mdInput, children} = props;\n\n    return (\n        <Row className={markdownInputWrapperStyle.markdown_input_wrapper} gutter={[16, 0]}>\n            <Col span={12}>{children}</Col>\n            <Col span={12}>\n                <Box backgroundColor=\"#fff\" height=\"calc(100% - 54px)\" margin={[32, 0, 16]} padding={[8]}>\n                    <Markdown articleTitle=\"\" mdInput={mdInput} />\n                </Box>\n            </Col>\n        </Row>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"markdown_input_wrapper\":\"d6389f\"};","import {Typography, Select, Input, Button} from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\nimport {UploadFile} from 'antd/lib/upload/interface';\nimport {Link} from 'react-router-dom';\n\nimport {Box} from '../../../layout/box/box';\nimport {ArticleFileType, ArticleType} from '../../../../server/article/article-type';\nimport {getArticleLinkToViewClient} from '../../../client-component/article/article-helper';\n\nimport {ArticleForValidationType} from './cms-article-type';\nimport {\n    getArticleLinkToEdit,\n    getFileMarkdownByFullInfo,\n    getIsImage,\n    getPathToFile,\n    getPathToImage,\n} from './cms-article-helper';\n\nconst {Option} = Select;\nconst {Text} = Typography;\n\nexport function makeFileListItem(fileInfo: ArticleFileType): UploadFile<unknown> {\n    const {name: fileInfoName} = fileInfo;\n\n    const url = getIsImage(fileInfoName)\n        ? getPathToImage(fileInfoName, {height: 96, width: 96})\n        : getPathToFile(fileInfoName);\n\n    return {\n        name: fileInfoName,\n        status: 'done',\n        uid: fileInfoName,\n        url,\n    };\n}\n\nexport function renderUploadedFileListItem(\n    originNode: JSX.Element,\n    file: UploadFile<unknown>,\n    fileList: Array<ArticleFileType>\n    // uploadedFileList: Array<UploadFile<unknown>>,\n    // actions: { download: () => void; preview: () => void; remove: () => void }\n): JSX.Element {\n    const {name} = file;\n    const fileInfo: ArticleFileType | void = fileList.find(\n        (fileInfoInFileList: ArticleFileType): boolean => fileInfoInFileList.name === name\n    );\n\n    return (\n        <Box height={112}>\n            {originNode}\n            {fileInfo ? (\n                <Input value={getFileMarkdownByFullInfo(fileInfo)} />\n            ) : (\n                <Input status=\"error\" value={`[ERROR]: can not find file by name: ${name}`} />\n            )}\n        </Box>\n    );\n}\n\nexport function makeSubDocumentOption(articleForValidation: ArticleForValidationType): JSX.Element {\n    const {title, id} = articleForValidation;\n\n    return (\n        <Option key={id} title={title} value={id}>\n            {title}\n        </Option>\n    );\n}\n\nexport function getParentLit(\n    article: ArticleType,\n    savedArticleList: Array<ArticleForValidationType>\n): Array<ArticleForValidationType> {\n    const {id: articleId} = article;\n\n    return savedArticleList.filter((savedArticle: ArticleForValidationType): boolean =>\n        savedArticle.subDocumentIdList.includes(articleId)\n    );\n}\n\nexport function renderParentList(\n    article: ArticleType,\n    savedArticleList: Array<ArticleForValidationType>\n): Array<JSX.Element> {\n    const parentList: Array<JSX.Element> = getParentLit(article, savedArticleList).map(\n        (savedArticle: ArticleForValidationType, index: number): JSX.Element => {\n            const {id, title, slug} = savedArticle;\n\n            return (\n                <Text key={id}>\n                    {index > 0 ? ', ' : null}\n                    <Link to={getArticleLinkToViewClient(slug)}>{title}</Link>\n                    &nbsp;|&nbsp;\n                    <Link to={getArticleLinkToEdit(id)}>{slug}</Link>\n                </Text>\n            );\n        }\n    );\n\n    if (parentList.length > 0) {\n        return parentList;\n    }\n\n    return [<Text key=\"no-parents\">no parents</Text>];\n}\n\nexport function UploadButton(): JSX.Element {\n    return <Button icon={<PlusOutlined />}>Upload</Button>;\n}\n","/* global File */\nimport {useEffect, useState} from 'react';\n// node_modules/antd/lib/upload/index.d.ts\n// TODO: set declare const Upload: UploadInterface<any>; TO declare const Upload: UploadInterface<unknown>;\n// node_modules/antd/lib/upload/index.d.ts\n// WARNING: set declare const Upload: UploadInterface<any>; TO declare const Upload: UploadInterface<unknown>;\nimport {\n    Button,\n    Checkbox,\n    DatePicker,\n    Divider,\n    Form,\n    Input,\n    message,\n    Popconfirm,\n    Select,\n    Typography,\n    Upload,\n} from 'antd';\nimport moment, {Moment} from 'moment';\nimport {FieldData, ValidateErrorEntity} from 'rc-field-form/lib/interface';\nimport {UploadChangeParam, UploadFile} from 'antd/lib/upload/interface';\nimport {Link} from 'react-router-dom';\nimport {QuestionCircleOutlined} from '@ant-design/icons';\nimport {red} from '@ant-design/colors';\nimport 'antd/dist/antd.css';\n\nimport {\n    ArticleFileType,\n    ArticleType,\n    ArticleTypeEnum,\n    SubDocumentListViewTypeEnum,\n} from '../../../../server/article/article-type';\nimport {validateArticle} from '../../../../server/article/article-validation';\nimport {\n    arrayToStringByComma,\n    humanNormalizeString,\n    makeTagsPreview,\n    stringToArrayByComma,\n    textToSlug,\n} from '../../../util/human';\nimport {useMakeExecutableState} from '../../../util/function';\nimport {PaginationResultType} from '../../../../server/data-base/data-base-type';\nimport {getArticleListPaginationPick} from '../../../service/article/article-api';\nimport {MarkdownInputWrapper} from '../../../layout/markdown-input-wrapper/markdown-input-wrapper';\nimport {IsRender} from '../../../layout/is-render/is-render';\nimport {rootArticleId} from '../../../../server/article/article-const';\nimport {getArticleLinkToViewClient} from '../../../client-component/article/article-helper';\nimport {Box} from '../../../layout/box/box';\nimport {HotKeyModifierEnum, useHotKey} from '../../../util/hot-key';\nimport {makeDefaultArticleFile} from '../../../../server/article/article-helper';\nimport {Spinner} from '../../../layout/spinner/spinner';\n\nimport {\n    getAbsentIdList,\n    getArticleLinkToEdit,\n    getIsImage,\n    handleDeleteArticle,\n    makeHtmlValidator,\n    makeSlugValidator,\n    uploadFile,\n} from './cms-article-helper';\nimport {\n    getParentLit,\n    makeFileListItem,\n    makeSubDocumentOption,\n    renderParentList,\n    renderUploadedFileListItem,\n    UploadButton,\n} from './cms-article-layout';\nimport {\n    CmsArticleModeEnum,\n    fileSizeLimit,\n    imageAccept,\n    imageFileSizeLimit,\n    keyForValidationList,\n    noDateUTC,\n} from './cms-article-const';\nimport {ArticleForValidationType} from './cms-article-type';\n\nconst {Text, Title} = Typography;\nconst {Option} = Select;\nconst {TextArea} = Input;\n\ntype CmsArticlePropsType = {\n    article: ArticleType;\n    mode: CmsArticleModeEnum;\n    onFinish: (article: ArticleType) => void;\n};\n\n// eslint-disable-next-line complexity, max-statements\nexport function CmsArticle(props: CmsArticlePropsType): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n    const {article, onFinish, mode} = props;\n    const {\n        articleType,\n        content,\n        createdDate,\n        description,\n        descriptionShort,\n        fileList: defaultFileList,\n        hasMetaRobotsNoFollowSeo, // Add/combine <meta name=\"robots\" content=\"nofollow\"/>\n        hasMetaRobotsNoIndexSeo, // Add/combine <meta name=\"robots\" content=\"noindex\"/> and add X-Robots-Tag: noindex\n        id,\n        isActive, // actually temporary \"removed\"\n        isInSiteMapXmlSeo, // has sitemap.xml link to article or not\n        metaDescriptionSeo, // tag <meta name=\"description\" content=\".....\" />\n        metaKeyWordsSeo, // tag <meta name=\"keywords\" content=\".....\" />\n        metaSeo, // actually any html code\n        publishDate: defaultPublishDate,\n        slug,\n        staffArtistList,\n        staffAuthorList,\n        staffCompositorList,\n        staffDirectorList,\n        staffIllustratorList,\n        staffReaderList,\n        subDocumentIdList,\n        subDocumentListViewType,\n        tagList,\n        tagTitleSeo, // tag <title>....</title>\n        title,\n        titleImage: defaultTitleImage,\n        updatedDate,\n    } = article;\n\n    const [form] = Form.useForm<ArticleType>();\n    const [fileList, setFileList] = useState<Array<ArticleFileType>>([...defaultFileList]);\n    const [titleImage, setTitleImage] = useState<ArticleFileType>(defaultTitleImage);\n    const [publishDate, setPublishDate] = useState<string>(defaultPublishDate || new Date().toISOString());\n    const [recommendedSlug, setRecommendedSlug] = useState<string>(textToSlug(title));\n    const [currentArticleState, setCurrentArticleState] = useState<ArticleType>(article);\n    const [isFileLoading, setIsFileLoading] = useState<boolean>(false);\n\n    useHotKey([HotKeyModifierEnum.ctrl], 's', form.submit);\n\n    const {execute: executeArticleListPaginationPick} = useMakeExecutableState<\n        Parameters<typeof getArticleListPaginationPick<keyof ArticleForValidationType>>,\n        PaginationResultType<ArticleForValidationType>\n    >(getArticleListPaginationPick);\n\n    const [savedArticleList, setSavedArticleList] = useState<Array<ArticleForValidationType>>([]);\n\n    useEffect(() => {\n        executeArticleListPaginationPick({pageIndex: 0, pageSize: 0, query: {}, sort: {title: 1}}, keyForValidationList)\n            .then((data: PaginationResultType<ArticleForValidationType>) => setSavedArticleList(data.result))\n            .catch((error: Error) => {\n                console.log(error);\n                message.error('Can not fetch article list.');\n            });\n    }, [executeArticleListPaginationPick]);\n\n    function onFinishForm(rawValues: ArticleType) {\n        const values: ArticleType = {\n            ...rawValues,\n            fileList,\n            publishDate,\n            staffArtistList: stringToArrayByComma(rawValues.staffArtistList),\n            staffAuthorList: stringToArrayByComma(rawValues.staffAuthorList),\n            staffCompositorList: stringToArrayByComma(rawValues.staffCompositorList),\n            staffDirectorList: stringToArrayByComma(rawValues.staffDirectorList),\n            staffIllustratorList: stringToArrayByComma(rawValues.staffIllustratorList),\n            staffReaderList: stringToArrayByComma(rawValues.staffReaderList),\n            tagList: stringToArrayByComma(rawValues.tagList),\n            title: humanNormalizeString(rawValues.title),\n            titleImage,\n        };\n        // validate form\n        const [isValidArticle, validateFunction] = validateArticle(values);\n\n        console.info('validateFunction.errors');\n        console.info(validateFunction.errors);\n        console.log('onFinishForm, is valid -', isValidArticle);\n        console.log('---> onFinishForm, values -', values);\n        console.log('---> onFinishForm, fileList -', fileList);\n\n        if (isValidArticle) {\n            onFinish(values);\n            return;\n        }\n\n        message.error(JSON.stringify(validateFunction.errors));\n    }\n\n    function onFinishFailedForm(errorInfo: ValidateErrorEntity<ArticleType>) {\n        message.error(JSON.stringify(errorInfo.errorFields));\n        console.log('onFinishFailedForm:', errorInfo);\n        console.log('onFinishFailedForm:', article);\n    }\n\n    function onValuesChangeForm(changedValues: unknown, values: ArticleType) {\n        setRecommendedSlug(textToSlug(values.title));\n        setCurrentArticleState(values);\n        console.log('onValuesChangeForm:', changedValues, values);\n        console.log('onValuesChangeForm:', article);\n    }\n\n    function onFieldsChangeForm(changedFields: Array<FieldData>, allFields: Array<FieldData>) {\n        console.log('onFieldsChangeForm:', changedFields, allFields);\n        console.log('onFieldsChangeForm:', article);\n    }\n\n    function handleChangeFileList(info: UploadChangeParam<UploadFile<unknown>>) {\n        const {file} = info;\n\n        if (file.status === 'removed') {\n            setFileList((currentFileList: Array<ArticleFileType>): Array<ArticleFileType> => {\n                return currentFileList.filter((fileInfo: ArticleFileType): boolean => fileInfo.name !== file.name);\n            });\n        }\n\n        console.log('handleChangeFileList:', info);\n        console.log('handleChangeFileList:', article);\n    }\n\n    function handleChangeTitleImage(info: UploadChangeParam<UploadFile<unknown>>) {\n        const {file} = info;\n\n        if (file.status === 'removed') {\n            setTitleImage(makeDefaultArticleFile());\n        }\n\n        console.log('handleChangeTitleImage:', info);\n        console.log('handleChangeTitleImage:', article);\n    }\n\n    const absentIdList = getAbsentIdList(subDocumentIdList, savedArticleList);\n    const parentList = getParentLit(article, savedArticleList);\n    const hasParent = parentList.length > 0;\n    const isDisableToDelete = hasParent || id === rootArticleId;\n\n    return (\n        <Form<ArticleType>\n            autoComplete=\"off\"\n            form={form}\n            initialValues={{remember: true}}\n            layout=\"vertical\"\n            name=\"article\"\n            onFieldsChange={onFieldsChangeForm}\n            onFinish={onFinishForm}\n            onFinishFailed={onFinishFailedForm}\n            onValuesChange={onValuesChangeForm}\n            scrollToFirstError\n        >\n            <Spinner isShow={isFileLoading} position=\"fixed\" />\n            <IsRender isRender={absentIdList.length > 0}>\n                <Title level={4} type=\"danger\">\n                    Document has missing children, children Id:&nbsp;{absentIdList.join(', ')}\n                </Title>\n            </IsRender>\n\n            <Box padding={[8, 0]}>\n                <Text>\n                    Article:&nbsp;\n                    <Link to={getArticleLinkToViewClient(slug)}>{title}</Link>\n                    &nbsp;|&nbsp;\n                    <Link to={getArticleLinkToEdit(id)}>{slug}</Link>\n                </Text>\n            </Box>\n\n            <Box padding={[8, 0, 16]}>\n                <Text>Parents:&nbsp;{renderParentList(article, savedArticleList)}</Text>\n            </Box>\n\n            <Form.Item hidden initialValue={id} label={`Article id: ${id}`} name=\"id\">\n                <Input disabled />\n            </Form.Item>\n\n            <Form.Item label={`Title image (to 16MB): ${titleImage.name}`}>\n                <Upload<unknown>\n                    accept={imageAccept}\n                    action={async (file: File): Promise<string> => {\n                        try {\n                            setIsFileLoading(true);\n\n                            const uploadedFileInfo: ArticleFileType = await uploadFile(file, imageFileSizeLimit);\n\n                            setTitleImage(uploadedFileInfo);\n                        } catch (error: unknown) {\n                            const errorMessage = error instanceof Error ? error.message : 'Too big file';\n\n                            message.error(errorMessage);\n                        } finally {\n                            setIsFileLoading(false);\n                        }\n\n                        // just prevent extra request to our server\n                        return 'https://dev.null/dev/null';\n                    }}\n                    fileList={titleImage.size > 0 ? [titleImage].map(makeFileListItem) : []}\n                    itemRender={(originNode: JSX.Element, file: UploadFile<unknown>): JSX.Element => {\n                        return renderUploadedFileListItem(originNode, file, [titleImage]);\n                    }}\n                    listType=\"picture\"\n                    maxCount={1}\n                    onChange={handleChangeTitleImage}\n                >\n                    {titleImage.size > 0 ? null : <UploadButton />}\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                initialValue={title}\n                label=\"Title:\"\n                name=\"title\"\n                rules={[{message: 'Required!', required: true}]}\n            >\n                <Input placeholder=\"Title\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={slug}\n                label={`Slug, avoid spec symbols, slug from title: ${recommendedSlug}`}\n                name=\"slug\"\n                normalize={textToSlug}\n                rules={makeSlugValidator({id, mode, savedArticleList})}\n            >\n                <Input disabled={savedArticleList.length === 0} placeholder=\"slug-is-here\" />\n            </Form.Item>\n\n            <Form.Item initialValue={articleType} label=\"Article type:\" name=\"articleType\">\n                <Select<ArticleTypeEnum>>\n                    <Option value={ArticleTypeEnum.article}>Article</Option>\n                    <Option value={ArticleTypeEnum.container}>Container</Option>\n                    <Option value={ArticleTypeEnum.audioList}>Audio list</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(tagList)}\n                label={`Tag List, use comma \",\" to divide: ${makeTagsPreview(currentArticleState.tagList)}`}\n                name=\"tagList\"\n            >\n                <Input placeholder=\"Tag1, Tag2, Tag3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={subDocumentListViewType}\n                label=\"Sub Document List View Type:\"\n                name=\"subDocumentListViewType\"\n            >\n                <Select<SubDocumentListViewTypeEnum>>\n                    <Option value={SubDocumentListViewTypeEnum.header}>Header</Option>\n                    <Option value={SubDocumentListViewTypeEnum.headerImage}>Header-Image</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item initialValue={subDocumentIdList} label=\"Sub Document List:\" name=\"subDocumentIdList\">\n                <Select<Array<string>>\n                    disabled={savedArticleList.length === 0}\n                    filterOption\n                    loading={savedArticleList.length === 0}\n                    mode=\"multiple\"\n                    optionFilterProp=\"title\"\n                    placeholder=\"Sub Document Id...\"\n                >\n                    {savedArticleList.map(makeSubDocumentOption)}\n                </Select>\n            </Form.Item>\n\n            <MarkdownInputWrapper mdInput={currentArticleState.content}>\n                <Form.Item initialValue={content} label=\"Content, use markdown:\" name=\"content\">\n                    <TextArea placeholder=\"# Markdown...\" rows={10} />\n                </Form.Item>\n            </MarkdownInputWrapper>\n\n            <MarkdownInputWrapper mdInput={currentArticleState.description}>\n                <Form.Item initialValue={description} label=\"Description, use markdown:\" name=\"description\">\n                    <TextArea placeholder=\"Some description is here...\" rows={3} />\n                </Form.Item>\n            </MarkdownInputWrapper>\n\n            <Form.Item\n                initialValue={descriptionShort}\n                label=\"Short description, plain text only, used for Open Graph:\"\n                name=\"descriptionShort\"\n            >\n                <TextArea placeholder=\"Some short description is here...\" rows={3} />\n            </Form.Item>\n\n            <Form.Item label={`Files (image to 16MB, other to 75MB): ${fileList.length}`}>\n                <Upload<unknown>\n                    // accept={fileAccept}\n                    action={async (file: File): Promise<string> => {\n                        try {\n                            setIsFileLoading(true);\n\n                            const sizeLimit = getIsImage(file.name) ? imageFileSizeLimit : fileSizeLimit;\n                            const uploadedFileInfo: ArticleFileType = await uploadFile(file, sizeLimit);\n\n                            setFileList((currentFileList: Array<ArticleFileType>): Array<ArticleFileType> => {\n                                return [...currentFileList, uploadedFileInfo];\n                            });\n                        } catch (error: unknown) {\n                            const errorMessage = error instanceof Error ? error.message : 'Too big file';\n\n                            message.error(errorMessage);\n                        } finally {\n                            setIsFileLoading(false);\n                        }\n\n                        // just prevent extra request to our server\n                        return 'https://dev.null/dev/null';\n                    }}\n                    fileList={fileList.map(makeFileListItem)}\n                    // itemRender={renderUploadedFileListItem}\n                    itemRender={(originNode: JSX.Element, file: UploadFile<unknown>): JSX.Element => {\n                        return renderUploadedFileListItem(originNode, file, fileList);\n                    }}\n                    listType=\"picture\"\n                    onChange={handleChangeFileList}\n                >\n                    <UploadButton />\n                </Upload>\n            </Form.Item>\n\n            <Form.Item initialValue={moment(publishDate)} label=\"Publish date UTC:\" name=\"publishDate\">\n                <DatePicker onOk={(date: Moment): void => setPublishDate(date.toISOString())} showTime />\n            </Form.Item>\n\n            <Form.Item\n                // set on server\n                initialValue={createdDate || noDateUTC}\n                label=\"Created date UTC:\"\n                name=\"createdDate\"\n            >\n                <Input disabled />\n            </Form.Item>\n\n            <Form.Item\n                // set on server\n                initialValue={updatedDate || noDateUTC}\n                label=\"Updated date UTC:\"\n                name=\"updatedDate\"\n            >\n                <Input disabled />\n            </Form.Item>\n\n            <Divider orientation=\"center\">SEO</Divider>\n\n            <Form.Item initialValue={tagTitleSeo} label=\"Meta Title, tag <title>...</title>:\" name=\"tagTitleSeo\">\n                <Input placeholder=\"Title...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={hasMetaRobotsNoFollowSeo}\n                label=\"Has Meta Robots No Follow:\"\n                name=\"hasMetaRobotsNoFollowSeo\"\n                valuePropName=\"checked\"\n            >\n                <Checkbox>Add/combine &lt;meta name=&quot;robots&quot; content=&quot;nofollow&quot; /&gt;</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n                initialValue={hasMetaRobotsNoIndexSeo}\n                label=\"Has Meta Robots No Index:\"\n                name=\"hasMetaRobotsNoIndexSeo\"\n                valuePropName=\"checked\"\n            >\n                <Checkbox>\n                    Add/combine &lt;meta name=&quot;robots&quot; content=&quot;noindex&quot;/&gt; and add X-Robots-Tag:\n                    noindex\n                </Checkbox>\n            </Form.Item>\n\n            <Form.Item initialValue={isActive} label=\"Is Active:\" name=\"isActive\" valuePropName=\"checked\">\n                <Checkbox>Uncheck to temporary &quot;remove&quot; (also remove from sitemap.xml)</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n                initialValue={isInSiteMapXmlSeo}\n                label=\"Is In Site Map Xml:\"\n                name=\"isInSiteMapXmlSeo\"\n                valuePropName=\"checked\"\n            >\n                <Checkbox>Does sitemap.xml has link to article or not</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n                initialValue={metaDescriptionSeo}\n                label={'Meta Description, tag <meta name=\"description\" content=\"...\" />:'}\n                name=\"metaDescriptionSeo\"\n            >\n                <Input placeholder=\"Description...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={metaKeyWordsSeo}\n                label={'Meta KeyWords, tag <meta name=\"keywords\" content=\"...\" />:'}\n                name=\"metaKeyWordsSeo\"\n            >\n                <Input placeholder=\"KeyWords...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={metaSeo}\n                label=\"Meta, actually any valid html code:\"\n                name=\"metaSeo\"\n                rules={makeHtmlValidator()}\n            >\n                <TextArea placeholder=\"Additional meta tags...\" rows={3} />\n            </Form.Item>\n\n            <Divider orientation=\"center\">Staff</Divider>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffArtistList)}\n                label={`Staff Artists, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffArtistList\n                )}`}\n                name=\"staffArtistList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffAuthorList)}\n                label={`Staff Authors, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffAuthorList\n                )}`}\n                name=\"staffAuthorList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffCompositorList)}\n                label={`Staff Compositors, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffCompositorList\n                )}`}\n                name=\"staffCompositorList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffDirectorList)}\n                label={`Staff Directors, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffDirectorList\n                )}`}\n                name=\"staffDirectorList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffIllustratorList)}\n                label={`Staff Illustrators, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffIllustratorList\n                )}`}\n                name=\"staffIllustratorList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item\n                initialValue={arrayToStringByComma(staffReaderList)}\n                label={`Staff Readers, use comma \",\" to divide: ${makeTagsPreview(\n                    currentArticleState.staffReaderList\n                )}`}\n                name=\"staffReaderList\"\n            >\n                <Input placeholder=\"Name1, Name2, Name3...\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button htmlType=\"submit\" type=\"primary\">\n                    Submit (ctrl+S)\n                </Button>\n                <IsRender isRender={mode === CmsArticleModeEnum.edit}>\n                    &nbsp;\n                    <Popconfirm\n                        cancelText=\"No\"\n                        disabled={isDisableToDelete}\n                        icon={<QuestionCircleOutlined style={{color: red.primary}} />}\n                        okText=\"Delete\"\n                        onConfirm={() => handleDeleteArticle(id)}\n                        title=\"Are you sure to delete the article？\"\n                    >\n                        <Button disabled={isDisableToDelete} htmlType=\"button\" type=\"default\">\n                            {isDisableToDelete ? 'Can NOT delete, article has parent' : 'Delete'}\n                        </Button>\n                    </Popconfirm>\n                </IsRender>\n            </Form.Item>\n        </Form>\n    );\n}\n","import {ReactNode} from 'react';\nimport {Layout, Menu} from 'antd';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {Box} from '../../../../layout/box/box';\nimport {appRoute} from '../../../../component/app/app-route';\n\nconst {Content} = Layout;\n\ntype CmsPagePropsType = {\n    children: ReactNode;\n};\n\nexport function CmsPage(props: CmsPagePropsType): JSX.Element {\n    const {children} = props;\n    const routerLocation = useLocation();\n\n    return (\n        <Layout>\n            <Box padding={16}>\n                <Menu\n                    defaultSelectedKeys={[routerLocation.pathname]}\n                    items={[\n                        {\n                            key: appRoute.articleList.path,\n                            label: <Link to={appRoute.articleList.path}>List</Link>,\n                        },\n                        {\n                            key: appRoute.articleCreate.path,\n                            label: <Link to={appRoute.articleCreate.path}>Create</Link>,\n                        },\n                        {\n                            key: appRoute.articleTree.path,\n                            label: <Link to={appRoute.articleTree.path}>Tree</Link>,\n                        },\n                    ]}\n                    mode=\"horizontal\"\n                />\n            </Box>\n\n            <Box padding={16}>\n                <Content>{children}</Content>\n            </Box>\n\n            {/* <Footer>Footer is here</Footer> */}\n        </Layout>\n    );\n}\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","makeCssArray","value","Array","isArray","length","console","error","Box","props","tagName","TagName","children","margin","padding","width","height","boxSizing","backgroundColor","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","style","MarkdownInputWrapper","mdInput","className","gutter","span","articleTitle","Option","Text","makeFileListItem","fileInfo","name","fileInfoName","status","uid","url","renderUploadedFileListItem","originNode","file","fileList","find","fileInfoInFileList","makeSubDocumentOption","articleForValidation","title","getParentLit","article","savedArticleList","articleId","filter","savedArticle","subDocumentIdList","includes","renderParentList","parentList","index","slug","Link","to","UploadButton","icon","PlusOutlined","Title","TextArea","CmsArticle","onFinish","mode","articleType","content","createdDate","description","descriptionShort","defaultFileList","hasMetaRobotsNoFollowSeo","hasMetaRobotsNoIndexSeo","isActive","isInSiteMapXmlSeo","metaDescriptionSeo","metaKeyWordsSeo","metaSeo","publishDate","defaultPublishDate","staffArtistList","staffAuthorList","staffCompositorList","staffDirectorList","staffIllustratorList","staffReaderList","subDocumentListViewType","tagList","tagTitleSeo","titleImage","defaultTitleImage","updatedDate","form","setFileList","useState","setTitleImage","setPublishDate","Date","toISOString","recommendedSlug","setRecommendedSlug","currentArticleState","setCurrentArticleState","isFileLoading","setIsFileLoading","submit","execute","executeArticleListPaginationPick","setSavedArticleList","useEffect","pageIndex","pageSize","query","sort","then","data","result","catch","message","absentIdList","isDisableToDelete","autoComplete","initialValues","remember","layout","onFieldsChange","changedFields","allFields","rawValues","values","human","isValidArticle","validateFunction","info","errors","JSON","stringify","onFinishFailed","errorInfo","errorFields","onValuesChange","changedValues","scrollToFirstError","isShow","position","isRender","level","type","join","hidden","initialValue","label","disabled","accept","action","async","uploadedFileInfo","errorMessage","size","itemRender","listType","maxCount","onChange","rules","required","placeholder","normalize","filterOption","loading","optionFilterProp","rows","sizeLimit","currentFileList","onOk","date","showTime","orientation","valuePropName","htmlType","cancelText","QuestionCircleOutlined","color","okText","onConfirm","Content","CmsPage","routerLocation","defaultSelectedKeys","pathname","items","key"],"sourceRoot":""}